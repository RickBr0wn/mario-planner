{"version":3,"sources":["Components/Layout/SignedInLinks.js","store/actions/authActions.js","Components/Layout/SignedOutLinks.js","Components/Layout/Navbar.js","Components/Dashboard/Notifications.js","Components/Projects/ProjectSummary.js","Components/Projects/ProjectList.js","Components/Dashboard/Dashboard.js","Components/Projects/ProjectDetails.js","Components/Auth/SignIn.js","Components/Auth/SignUp.js","Components/Projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Layout_SignedInLinks","Layout_SignedOutLinks","Link","Notifications","notifications","notificationList","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","createdAt","dateAndTime","calendar","title","body","authorFirstName","authorLastName","ProjectList","projects","projectMap","Projects_ProjectSummary","Dashboard","_this$props","this","Projects_ProjectList","Dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","Layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","message","projectReducer","action","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","reduxDevToolsExtension","devToolsExtension","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ySAyBeA,cAAQ,KANI,SAAAC,GACzB,MAAO,CACLC,QAAS,kBAAMD,ECLV,SAACA,EAAUE,EAAXC,IACYC,EAD2BD,EAAjBC,eAElBC,OAAOJ,UACbK,KAAK,kBAAMN,EAAS,CAACO,KAAM,0BDMnBR,CApBO,SAACS,GACrB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,gBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,QAASP,EAAMP,SAAlB,YACJQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCACvBJ,EAAMQ,QAAQC,cEIVC,EAbQ,WACrB,OACET,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YAEFL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,aCmBOf,cARS,SAAAoB,GAEtB,OADAC,QAAQC,IAAIF,GACL,CACLd,KAAMc,EAAMG,SAASjB,KACrBW,QAASG,EAAMG,SAASN,UAIbjB,CAvBA,SAAAS,GAAS,IACdH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QACRO,EAAQlB,EAAKmB,IAAMf,EAAAC,EAAAC,cAACc,EAAD,CAAeT,QAASA,IAAcP,EAAAC,EAAAC,cAACe,EAAD,MAC/D,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMb,GAAG,IAAIF,UAAU,cAAvB,iBACCW,wBCgBIK,EA3BO,SAAApB,GAAS,IACrBqB,EAAkBrB,EAAlBqB,cACFC,EAAmBD,GAAiBA,EAAcE,IAAI,SAAAC,GAC1D,OACEvB,EAAAC,EAAAC,cAAA,MAAIsB,IAAKD,EAAKE,IACZzB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaoB,EAAKG,KAAlC,KACA1B,EAAAC,EAAAC,cAAA,YAAOqB,EAAKI,SACZ3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACZyB,IAAOL,EAAKM,KAAKC,UAAUC,cAKpC,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACEH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACXkB,OCJAW,EAfQ,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QACvBvB,QAAQC,IAAIsB,EAAQC,UAAUL,UAC9B,IAAMM,EAAcR,IAAOM,EAAQC,UAAUL,UAAUO,WACvD,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc+B,EAAQI,OACtCtC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgB+B,EAAQK,MACrCvC,EAAAC,EAAAC,cAAA,sBAAcgC,EAAQM,gBAAtB,IAAwCN,EAAQO,gBAChDzC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaiC,MCQnBM,EAhBK,SAAAT,GAAgB,IAAdU,EAAcV,EAAdU,SACdC,EAAaD,GAAYA,EAASrB,IAAI,SAAAY,GAC1C,OACElC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMb,GAAI,YAAc6B,EAAQT,GAAID,IAAKU,EAAQT,IAC/CzB,EAAAC,EAAAC,cAAC2C,EAAD,CAAgBX,QAASA,OAK/B,OACElC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZyC,6BCPDE,mLACK,IAAAC,EACmCC,KAAKjD,MAAvC4C,EADDI,EACCJ,SAAU/C,EADXmD,EACWnD,KAAMwB,EADjB2B,EACiB3B,cACxB,OAAIxB,EAAKmB,IAEPf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC+C,EAAD,CAAaN,SAAUA,KAEzB3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAACgD,EAAD,CAAe9B,cAAeA,OARjBpB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAU9C,GAAG,mBAHd+C,aA2BTC,cACb/D,YATsB,SAACoB,GACvB,MAAO,CACLiC,SAAUjC,EAAM4C,UAAUC,QAAQZ,SAClC/C,KAAMc,EAAMG,SAASjB,KACrBwB,cAAeV,EAAM4C,UAAUC,QAAQnC,iBAMzCoC,2BAAiB,CACf,CAACC,WAAY,WAAYC,QAAS,CAAC,YAAa,SAChD,CAACD,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJ/CL,CAMbP,GCIaO,cAAQ/D,YAVC,SAACoB,EAAOkD,GAC9B,IAAMnC,EAAKmC,EAASC,MAAMC,OAAOrC,GAC3BkB,EAAWjC,EAAM4C,UAAUS,KAAKpB,SAEtC,MAAO,CACLT,QAFcS,EAAWA,EAASlB,GAAM,KAGxC7B,KAAMc,EAAMG,SAASjB,QAIwB4D,2BAAiB,CAAC,CAACC,WAAY,cAAjEJ,CAtCQ,SAACtD,GAAU,IACxBmC,EAAkBnC,EAAlBmC,QAAStC,EAASG,EAATH,KACXwC,EAAcR,IAAOM,EAAQC,UAAUL,UAAUO,WACvD,OAAIzC,EAAKmB,IACNmB,EAEClC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc+B,EAAQI,OACtCtC,EAAAC,EAAAC,cAAA,SAAIgC,EAAQP,UAEd3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,wBAAgBgC,EAAQM,gBAAxB,IAA0CN,EAAQO,gBAClDzC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaiC,MAOhCpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,4BAnBeF,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAU9C,GAAG,sBCL9B2D,6MACJtD,MAAQ,CACNuD,MAAO,GACPC,SAAU,MAGZC,aAAe,SAAAC,GACbC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGH,EAAEK,OAAOhD,GAAK2C,EAAEK,OAAOC,WAI5BC,aAAe,SAAAP,GACbA,EAAEQ,iBACFP,EAAKtE,MAAM8E,OAAOR,EAAK3D,gFAGhB,IAAAqC,EACqBC,KAAKjD,MAAzB+E,EADD/B,EACC+B,UACR,OAFO/B,EACYnD,KACXmB,IAAYf,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAU9C,GAAG,MAE/BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM6E,SAAU/B,KAAK2B,aAAcxE,UAAU,SAC3CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,SAAf,SACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQ2B,GAAG,QAAQwD,SAAUjC,KAAKmB,gBAEhDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,YAAf,YACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAW2B,GAAG,WAAWwD,SAAUjC,KAAKmB,gBAEtDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACX2E,EAAY9E,EAAAC,EAAAC,cAAA,SAAI4E,GAAiB,gBAnC5B1B,aAyDN9D,cAbS,SAAAoB,GACtB,MAAO,CACLoE,UAAWpE,EAAMd,KAAKkF,UACtBlF,KAAMc,EAAMG,SAASjB,OAIE,SAAAL,GACzB,MAAO,CACLsF,OAAQ,SAAAK,GAAW,OAAI3F,ER1DL,SAAA2F,GACpB,OAAO,SAAC3F,EAAUE,EAAXwC,IACYtC,EAD6BsC,EAAlBtC,eAGnBC,OAAOuF,2BACdD,EAAYjB,MACZiB,EAAYhB,UACZrE,KAAK,WACLN,EAAS,CAAEO,KAAM,oBAChBsF,MAAM,SAACC,GACR9F,EAAS,CAAEO,KAAM,cAAeuF,WQgDFR,CAAOK,OAI5B5F,CAA6C0E,GCzDtDsB,6MACJ5E,MAAQ,CACNuD,MAAO,GACPC,SAAU,GACVqB,UAAW,GACXC,SAAU,MAGZrB,aAAe,SAAAC,GACbC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGH,EAAEK,OAAOhD,GAAK2C,EAAEK,OAAOC,WAI5BC,aAAe,SAAAP,GACbA,EAAEQ,iBACFP,EAAKtE,MAAM0F,OAAOpB,EAAK3D,gFAGhB,IAAAqC,EACqBC,KAAKjD,MAAzBH,EADDmD,EACCnD,KAAMkF,EADP/B,EACO+B,UACd,OAAGlF,EAAKmB,IAAYf,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAU9C,GAAG,MAE/BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM6E,SAAU/B,KAAK2B,aAAcxE,UAAU,SAC3CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,SAAf,SACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQ2B,GAAG,QAAQwD,SAAUjC,KAAKmB,gBAEhDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,YAAf,YACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAW2B,GAAG,WAAWwD,SAAUjC,KAAKmB,gBAEtDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,aAAf,cACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAO2B,GAAG,YAAYwD,SAAUjC,KAAKmB,gBAEnDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,YAAf,aACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAO2B,GAAG,WAAWwD,SAAUjC,KAAKmB,gBAElDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,YAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZ2E,EAAY9E,EAAAC,EAAAC,cAAA,SAAI4E,GAAiB,eA9CzB1B,aAmEN9D,cAbS,SAAAoB,GACtB,MAAO,CACLd,KAAMc,EAAMG,SAASjB,KACrBkF,UAAWpE,EAAMd,KAAKkF,YAIC,SAAAvF,GACzB,MAAO,CACLkG,OAAQ,SAAAC,GAAO,OAAInG,ET7CD,SAAAmG,GACpB,OAAO,SAACnG,EAAUE,EAAXkG,GAAuD,IAAhChG,EAAgCgG,EAAhChG,YAAaiG,EAAmBD,EAAnBC,aACnC/E,EAAWlB,IACX2D,EAAYsC,IAElB/E,EAASjB,OAAOiG,+BACdH,EAAQzB,MACRyB,EAAQxB,UACRrE,KAAK,SAACiG,GACN,OAAOxC,EAAUG,WAAW,SAASsC,IAAID,EAASpE,KAAKX,KAAKiF,IAAI,CAC9DT,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClBhF,SAAUkF,EAAQH,UAAU,GAAKG,EAAQF,SAAS,OAEnD3F,KAAK,WACNN,EAAS,CAACO,KAAM,qBACfsF,MAAM,SAAAC,GACP9F,EAAS,CAACO,KAAM,eAAgBuF,WS4BNI,CAAOC,OAIxBpG,CAA6CgG,WCnEtDW,6MACJvF,MAAQ,CACN4B,MAAO,GACPX,QAAS,MAGXwC,aAAe,SAAAC,GACbC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGH,EAAEK,OAAOhD,GAAK2C,EAAEK,OAAOC,WAI5BC,aAAe,SAAAP,GACbA,EAAEQ,iBACFP,EAAKtE,MAAMmG,cAAc7B,EAAK3D,OAC9B2D,EAAKtE,MAAMoG,QAAQC,KAAK,8EAMxB,OAFiBpD,KAAKjD,MAAdH,KAECmB,IAEPf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM6E,SAAU/B,KAAK2B,aAAcxE,UAAU,SAC3CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,SAAf,SACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAO2B,GAAG,QAAQwD,SAAUjC,KAAKmB,gBAE/CnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,WAAf,mBACAhF,EAAAC,EAAAC,cAAA,YAAU+E,SAAUjC,KAAKmB,aAAc1C,GAAG,UAAUtB,UAAU,0BAEhEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,aAdaH,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAU9C,GAAG,mBArBV+C,aAuDb9D,cAZS,SAAAoB,GACtB,MAAO,CACLd,KAAMc,EAAMG,SAASjB,OAIE,SAAAL,GACzB,MAAO,CACL2G,cAAe,SAAAhE,GAAO,OAAI3C,ECxDD,SAAA2C,GAC3B,OAAO,SAAC3C,EAAUE,EAAXwC,GAAqDA,EAA/BtC,YAA+B,IACpD2D,GAAYsC,EADwC3D,EAAlB2D,gBAGlCrF,EAAUd,IAAWoB,SAASN,QAC9B8F,EAAW5G,IAAWoB,SAASjB,KAAKmB,IAE1CuC,EAAUG,WAAW,YAAY6C,IAAjC/B,OAAAgC,EAAA,EAAAhC,CAAA,GACKrC,EADL,CAEEM,gBAAiBjC,EAAQgF,UACzB9C,eAAgBlC,EAAQiF,SACxBa,SAAUA,EACVlE,UAAW,IAAIqE,QACd3G,KAAK,WACNN,EAAS,CAAEO,KAAM,iBAAkBoC,cAClCkD,MAAM,SAAAC,GACP9F,EAAS,CAAEO,KAAM,uBAAwBuF,WDwCRa,CAAchE,OAItC5C,CAA6C2G,GEhC7CQ,mLAjBX,OACEzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyG,EAAD,MACA3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlE,IACjC9C,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWC,IACtCjH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWhD,IACjChE,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW1B,IACjCtF,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWf,cAX3B7C,aCCE8D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxD,MACvB,uEChBAyD,EAAY,CAChBxC,UAAW,MA0CEyC,EAvCK,WAAsC,IAArC7G,EAAqC8G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7BF,EAA6BrF,EAAAuF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAhB5H,EAAgBmC,EAAhBnC,KAAMuF,EAAUpD,EAAVoD,IAC9C,OAAQvF,GACN,IAAK,cAEH,OADAa,QAAQC,IAAI,eACL2D,OAAAgC,EAAA,EAAAhC,CAAA,GACF7D,EADL,CAEEoE,UAAWO,EAAIsC,UAGnB,IAAK,gBAEH,OADAhH,QAAQC,IAAI,iBACL2D,OAAAgC,EAAA,EAAAhC,CAAA,GACF7D,EADL,CAEEoE,UAAW,OAGf,IAAK,kBAEH,OADAnE,QAAQC,IAAI,mBACLF,EAET,IAAK,iBAEH,OADAC,QAAQC,IAAI,kBACL2D,OAAAgC,EAAA,EAAAhC,CAAA,GACF7D,EADL,CAEEoE,UAAW,OAGf,IAAK,eAEL,OADAnE,QAAQC,IAAI,gBACL2D,OAAAgC,EAAA,EAAAhC,CAAA,GACF7D,EADL,CAEEoE,UAAWO,EAAIsC,UAGjB,QACE,OAAOjH,ICvCP4G,EAAY,CAChB3E,SAAU,CACR,CAAClB,GAAI,IAAKa,MAAO,uBAAwBC,KAAM,8FAC/C,CAACd,GAAI,IAAKa,MAAO,wBAAyBC,KAAM,yGAChD,CAACd,GAAI,IAAKa,MAAO,uBAAwBC,KAAM,yEAiBpCqF,EAbQ,WAA+B,IAA9BlH,EAA8B8G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWO,EAAWL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQG,EAAO/H,MACb,IAAK,iBAEH,OADAa,QAAQC,IAAI,oBAAqBiH,EAAO3F,SACjCxB,EACT,IAAK,uBAEH,OADAC,QAAQC,IAAI,yBAA0BiH,EAAOxC,KACtC3E,EACT,QACE,OAAOA,ICJEoH,EAPKC,YAAgB,CAClCnI,KAAM2H,EACNrF,QAAS0F,EACTtE,UAAW0E,mBACXnH,SAAUoH,4DCIZpH,IAASqH,cATI,CACXC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,iBAIrB3H,IAASyC,YAAYmF,SAAS,CAAEC,uBAAuB,IAExC7H,QAAf,ECJM8H,EAAyBxB,OAAOyB,mBAAqBzB,OAAOyB,oBAE5DC,EAAQC,YAAYhB,EACxBzE,YACE0F,YAAgBC,IAAMC,kBAAkB,CAACtJ,0BAAaiG,+BACtDsD,yBAAeC,GACfC,6BAAmBD,EAAU,CAAEE,wBAAwB,EAAMC,YAAa,QAASC,mBAAmB,IACtGZ,IAIJE,EAAMW,oBAAoB3J,KAAK,WAC7B4J,IAASC,OAAO1J,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAUd,MAAOA,GAAO7I,EAAAC,EAAAC,cAAC0J,EAAD,OAAoBC,SAASC,eAAe,SLgGhF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpK,KAAK,SAAAqK,GACjCA,EAAaC","file":"static/js/main.4becaa59.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n      <li><a onClick={props.signOut}>Log Out</a></li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase()\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS' })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'LOGIN_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase()\r\n    firebase.auth().signOut()\r\n      .then(() => dispatch({type: 'SIGNOUT_SUCESS'}))\r\n  }\r\n}\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase()\r\n    const firestore = getFirestore()\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((response) => {\r\n      return firestore.collection('users').doc(response.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    }).then(() => {\r\n      dispatch({type: 'SIGNUP_SUCCESS'})\r\n    }).catch(err => {\r\n      dispatch({type: 'SIGNUP_ERROR', err})\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Sign Up</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Log In</NavLink>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n  return (\r\n    <div className=\"navbar-fixed\">\r\n      <nav className=\"nav nav-wrapper grey darken-3\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"brand-logo\">Mario Planner</Link>        \r\n          {links}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state)\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = props => {\r\n  const { notifications } = props\r\n  const notificationList = notifications && notifications.map(item => {\r\n    return (\r\n      <li key={item.id}>\r\n        <span className=\"pink-text\">{item.user} </span>\r\n        <span>{item.content}</span>\r\n        <div className=\"grey-text notification-date\">\r\n          {moment(item.time.toDate()).fromNow()}\r\n        </div>\r\n      </li>\r\n    )\r\n  })\r\n  return(\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n            <ul className=\"notifications\">\r\n              {notificationList}\r\n            </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  console.log(project.createdAt.toDate())\r\n  const dateAndTime = moment(project.createdAt.toDate()).calendar()\r\n  return(\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p className=\"card-content\">{project.body}</p>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{dateAndTime}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n  const projectMap = projects && projects.map(project => {\r\n    return (\r\n      <Link to={'/project/' + project.id} key={project.id}>\r\n        <ProjectSummary project={project} />\r\n      </Link>\r\n    )\r\n  })\r\n\r\n  return(\r\n    <div className=\"project-list section\">\r\n      {projectMap}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../Projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    return(\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects}/>\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props\r\n  const dateAndTime = moment(project.createdAt.toDate()).calendar()\r\n  if(!auth.uid) return <Redirect to=\"/signin\" />\r\n  if(project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <p className=\"grey-text\">{dateAndTime}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }else{\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading Data..</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id\r\n  const projects = state.firestore.data.projects\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps), firestoreConnect([{collection: 'projects'}]))(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.props.signIn(this.state)\r\n  }\r\n\r\n  render() {\r\n    const { authError, auth } = this.props\r\n    if(auth.uid) return <Redirect to=\"/\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: credentials => dispatch(signIn(credentials))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.props.signUp(this.state)\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props\r\n    if(auth.uid) return <Redirect to=\"/\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.props.createProject(this.state)\r\n    this.props.history.push('/')\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props\r\n    // Check to see if the user is logged in\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea onChange={this.handleChange} id=\"content\" className=\"materialize-textarea\"></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = project => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firestore = getFirestore()\r\n\r\n    const profile = getState().firebase.profile\r\n    const authorId = getState().firebase.auth.uid\r\n\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT', project })\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n    })\r\n  }\r\n}","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './Components/Layout/Navbar'\nimport Dashboard from './Components/Dashboard/Dashboard'\nimport ProjectDetails from './Components/Projects/ProjectDetails'\nimport SignIn from './Components/Auth/SignIn'\nimport SignUp from './Components/Auth/SignUp'\nimport CreateProject from './Components/Projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, { type, err }) => {\r\n  switch (type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: err.message\r\n      }\r\n\r\n    case 'LOGIN_SUCCESS': \r\n      console.log('login success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success')\r\n      return state\r\n\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNUP_ERROR':\r\n    console.log('signup error')\r\n    return {\r\n      ...state,\r\n      authError: err.message\r\n    }\r\n    \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n  projects: [\r\n    {id: '1', title: 'My first random post', body: 'Id anim veniam id exercitation cupidatat consectetur velit do quis elit et laborum id in. '},\r\n    {id: '2', title: 'My second random post', body: 'Consequat in laborum eiusmod cillum culpa eu aliqua reprehenderit dolore laboris sint do deserunt eu.'},\r\n    {id: '3', title: 'My third random post', body: 'Minim fugiat Lorem aute consequat Lorem ea Lorem labore et eu elit.'}\r\n  ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT': \r\n      console.log('Created project: ', action.project)\r\n      return state\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('Create project error: ', action.err)\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default projectReducer","import { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: \"AIzaSyC4yoc1B4lit_H6H0daKKybIHLXyFh8AH4\",\r\n  authDomain: \"mario-planner.firebaseapp.com\",\r\n  databaseURL: \"https://mario-planner.firebaseio.com\",\r\n  projectId: \"mario-planner\",\r\n  storageBucket: \"mario-planner.appspot.com\",\r\n  messagingSenderId: \"668089638177\"\r\n}\r\n\r\nfirebase.initializeApp(config)\r\nfirebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\nexport default firebase","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst reduxDevToolsExtension = window.devToolsExtension && window.devToolsExtension()\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }),\n    reduxDevToolsExtension\n  )\n)\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'))\n  \n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.unregister()\n})"],"sourceRoot":""}